version: '3.0'

services:
  
  nginx:
    container_name: 'nginx-rust'
    image: "nginx:latest"
    ports:
      - "80:80"
    depends_on:
      - actix-app1
      - actix-app2
      - actix-app3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      actix_lb:
        ipv4_address: 172.20.0.3
  
  actix-app1:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: actix-app1
    ports:
      - "8081:8080"
    depends_on:
      - redis
      - postgres
    command: 
      - /bin/sh
      - -c
      - |
        diesel migration run
        echo "Migration OK"
        cargo run --release
    networks:
      actix_lb:
        ipv4_address: 172.20.0.4
  
  actix-app2:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: actix-app2
    ports:
      - "8082:8080"
    depends_on:
      - redis
      - postgres
      - actix-app1
    command: 
      - /bin/sh
      - -c
      - |
        cargo run --release
    networks:
      actix_lb:
        ipv4_address: 172.20.0.5
        
  actix-app3:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: actix-app3
    ports:
      - "8083:8080"
    depends_on:
      - redis
      - postgres
      - actix-app1
    command: 
      - /bin/sh
      - -c
      - |
        cargo run --release
    networks:
      actix_lb:
        ipv4_address: 172.20.0.6

  
  redis:
    image: redis:5.0.0
    container_name: redisdb
    volumes:
      - redis-data:/data
    networks:
      actix_lb:
        ipv4_address: 172.20.0.7
        
  postgres:
    image: postgres:latest
    container_name: postgresdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql
    networks:
      actix_lb:
        ipv4_address: 172.20.0.8
    restart: unless-stopped
    
volumes:
  redis-data:
  postgres-data:

networks:
  actix_lb:
    ipam:
      config:
        - subnet: 172.20.0.0/16
